CREATE_DB=CREATE DATABASE IF NOT EXISTS wanted;
CHECK_TABLE_EXISTS=SELECT count(1) as rowCount FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA() AND UPPER(TABLE_NAME) = UPPPER(?);
CREATE_TABLE_USER=CREATE TABLE IF NOT EXISTS User(uid int NOT NULL AUTO_INCREMENT, usr_name varchar(50) NOT NULL, password varchar(100) NOT NULL, email varchar(100) NOT NULL, role int NOT NULL, phone varchar(20), avatar_path varchar(200), real_name varchar(50), avatar_hash blob, PRIMARY KEY(uid), UNIQUE(usr_name), UNIQUE(email));
CREATE_TABLE_SEEKER=CREATE TABLE IF NOT EXISTS Seeker(uid int NOT NULL, college varchar(50), major varchar(50), PRIMARY KEY(uid), FOREIGN KEY(uid) REFERENCES User(uid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE_TABLE_RECRUITER=CREATE TABLE IF NOT EXISTS Recruiter(uid int NOT NULL, cid int, dept varchar(50), PRIMARY KEY(uid), FOREIGN KEY(uid) REFERENCES User(uid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE_TABLE_COMPANY=CREATE TABLE IF NOT EXISTS Company(cid int NOT NULL AUTO_INCREMENT, cname varchar(50), banner_path varchar(200), descript varchar(300), location varchar(300), banner_hash blob, PRIMARY KEY(cid), UNIQUE(cname));
CREATE_TABLE_EXPER=CREATE TABLE IF NOT EXISTS Exper(eid int NOT NULL AUTO_INCREMENT, uid int NOT NULL, start_time varchar(20), end_time varchar(20), descript varchar(200) NOT NULL, type int NOT NULL, PRIMARY KEY(eid), FOREIGN KEY(uid) REFERENCES Seeker(uid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE_TABLE_POST=CREATE TABLE IF NOT EXISTS Post(pid int NOT NULL AUTO_INCREMENT, uid int NOT NULL, title varchar(100) NOT NULL, descript varchar(200) NOT NULL, suit_major varchar(50) NOT NULL, PRIMARY KEY(pid), FOREIGN KEY(uid) REFERENCES Recruiter(uid) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE_TABLE_FOLLOW=CREATE TABLE IF NOT EXISTS Follow(fid int NOT NULL AUTO_INCREMENT, uid1 int NOT NULL, uid2 int NOT NULL, PRIMARY KEY(fid));
CREATE_TABLE_LIKE=CREATE TABLE IF NOT EXISTS Favorite(lid int NOT NULL AUTO_INCREMENT, uid int NOT NULL, pid int NOT NULL, PRIMARY KEY(lid));
CREATE_TABLE_APPLY=CREATE TABLE IF NOT EXISTS Apply(aid int NOT NULL AUTO_INCREMENT, pid int NOT NULL, uid int NOT NULL, PRIMARY KEY(aid));
INSERT_USER=INSERT INTO User(usr_name, password, email, role, phone, avatar_path, real_name) VALUES(?, ?, ?, ?, ?, ?, ?);
INSERT_SEEKER=INSERT INTO Seeker(uid, college, major) VALUES(?, ?, ?);
INSERT_RECRUITER=INSERT INTO Recruiter(uid, cid, dept) VALUES(?, ?, ?);
INSERT_COMPANY=INSERT INTO Company(cname, banner_path, descript, location, banner_hash) VALUES(?, ?, ?, ?, ?) ON DUPLICATE KEY UPDATE banner_path = VALUES(banner_path), descript = VALUES(descript), location = VALUES(location), banner_hash = VALUES(banner_hash);
INSERT_EXPER=INSERT INTO Exper(uid, start_time, end_time, descript, type) VALUES(?, ?, ?, ?, ?);
INSERT_POST=INSERT INTO Post(uid, title, descript, suit_major) VALUES(?, ?, ?, ?);
INSERT_FOLLOW=INSERT INTO Follow(uid1, uid2) VALUES(?, ?);
INSERT_LIKE=INSERT INTO Favorite(uid, pid) VALUES(?, ?);
INSERT_APPLY=INSERT INTO Apply(pid, uid) VALUES(?, ?);
DELETE_USER=DELETE FROM User WHERE uid = ?;
DELETE_EXPER=DELETE FROM Exper WHERE eid = ?;
DELETE_POST=DELETE FROM Post WHERE pid = ?; 
UPDATE_USER=UPDATE User SET avatar_path = ?, real_name = ?, phone = ?, avatar_hash = ? WHERE uid = ?; 
UPDATE_SEEKER=UPDATE Seeker SET college = ?, major = ? WHERE uid = ?;
UPDATE_RECRUITER=UPDATE Recruiter SET cid = ?, dept = ? WHERE uid = ?;
UPDATE_COMPANY=UPDATE Company SET cname = ?, banner_path = ?, descript = ?, location = ? WHERE cid = ?;
UPDATE_EXPER=UPDATE Exper SET start_time = ?, end_time = ?, descript = ? WHERE pid = ?;
UPDATE_POST=UPDATE Post SET title = ?, descript = ? WHERE pid = ?; 
GET_USER_BY_ID=SELECT * FROM User WHERE uid = ?;
GET_USER_BY_NAME=SELECT * FROM User WHERE usr_name = ?;
GET_USER_BY_EMAIL=SELECT * FROM User WHERE email = ?;
GET_AVATAR_BY_HASH=SELECT avatar_path FROM user WHERE BINARY avatar_hash = BINARY ?;
GET_SEEKER=SELECT * FROM Seeker WHERE uid = ?;
GET_RECRUITER=SELECT * FROM Recruiter WHERE uid = ?;
GET_COMPANY_ID=SELECT cid FROM Company WHERE cname = ?;
GET_COMPANY_BY_ID=SELECT * FROM Company WHERE cid = ?;
GET_COMPANY_BY_NAME=SELECT * FROM Company WHERE cname = ?;
GET_BANNER_BY_HASH=SELECT banner_path FROM Company WHERE BINARY banner_hash = BINARY ?;
GET_COMPANY_BY_UID=SELECT cname, banner_path, descript, location FROM Recruiter RIGHT JOIN Company ON Recruiter.cid = Company.cid where uid = ?;
GET_EXPER_BY_EID=SELECT * FROM Exper WHERE eid = ?;
GET_EXPER_BY_UID=SELECT * FROM Exper WHERE uid = ? AND type = ?;
GET_POST_BY_PID=SELECT * FROM Post WHERE pid = ?;
GET_POST_BY_UID=SELECT * FROM Post WHERE uid = ?;
DROP_DB=DROP DATABASE IF EXISTS wanted;
GET_MORE_POST=SELECT * FROM Post WHERE pid < ? AND suit_major = ? order by pid desc limit 0,?;
GET_NEW_POST=SELECT * FROM Post WHERE suit_major = ? order by pid desc limit ?;
GET_MYMORE_POST=SELECT * FROM Post WHERE pid < ? AND uid = ? order by pid desc limit 0,?;
GET_MYNEW_POST=SELECT * FROM Post WHERE uid = ? order by pid desc limit ?;
GET_NEW_PEOPLE=SELECT * FROM User WHERE uid NOT IN (SELECT uid2 FROM Follow WHERE uid1 = ?) order by uid desc limit ?;
GET_MORE_PEOPLE=SELECT * FROM User WHERE uid < ? AND uid NOT IN (SELECT uid2 FROM Follow WHERE uid1 = ?) order by uid desc limit 0,?;
GET_FOLLOWER_BY_ID=SELECT uid1 FROM Follow WHERE uid2 = ?;
GET_FOLLOWING_BY_ID=SELECT uid2 FROM Follow WHERE uid1 = ?;
GET_LIKE_BY_ID=SELECT pid FROM Favorite WHERE uid = ?;
FIND_LIKE=SELECT lid FROM Favorite WHERE uid = ? AND pid = ?;
FIND_APPLY=SELECT aid FROM Apply WHERE pid = ? AND uid = ?;
GET_APPLY_BY_ID=SELECT uid FROM Apply WHERE pid = ?;